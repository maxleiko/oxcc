#ifndef OXC_TRANSFORMER_H
#define OXC_TRANSFORMER_H

/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */

#include <stdarg.h>
#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>
#include <stdlib.h>

typedef enum {
    /// Success
    oxcc_result_ok = 0,
    /// Provided arguments are not valid
    oxcc_result_invalid,
    /// An error occurred with I/O
    oxcc_result_io,
    /// Unable to parse the source
    oxcc_result_parse,
    /// Semantic issue with the source
    oxcc_result_semantic,
    /// Unable to transpile the source
    oxcc_result_transformer,
} oxcc_result;

typedef struct oxcc_transpiler oxcc_transpiler;

/// # Safety
/// The returned pointer must be de-allocated with `oxcc_transpiler__free`
oxcc_transpiler *oxcc_transpiler__new(void);

/// # Safety
/// The given pointer must be allocated with `oxcc_transpiler__new`
void oxcc_transpiler__free(oxcc_transpiler *transpiler);

/// # Safety
/// `transpiler` must be allocated using `oxcc_transpiler__new`
oxcc_result oxcc_transpiler__transpile(oxcc_transpiler *transpiler,
                                       const char *path_ptr,
                                       size_t path_len,
                                       const char **output_ptr,
                                       size_t *output_len);

/// # Safety
/// Make sure you pass in a pointer to a string allocated by `demo_transpile`
void oxcc_string__free(const char *input);

#endif  /* OXC_TRANSFORMER_H */
